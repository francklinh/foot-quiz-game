-- =====================================================
-- CORRECTION: Valeur par d√©faut des cerises √† 0
-- =====================================================
-- Probl√®me: Les nouveaux utilisateurs commencent avec 100 cerises
-- Solution: Corriger la valeur par d√©faut et r√©initialiser les comptes

DO $$
DECLARE
    users_to_reset INTEGER;
BEGIN
    RAISE NOTICE 'üîç ANALYSE DU PROBL√àME DES CERISES';
    RAISE NOTICE '==========================================================';
    
    -- Compter les utilisateurs avec exactement 100 cerises (jamais jou√©)
    SELECT COUNT(*) INTO users_to_reset
    FROM users
    WHERE cerises_balance = 100;
    
    RAISE NOTICE 'Utilisateurs avec 100 cerises: %', users_to_reset;
    
    -- =====================================================
    -- √âTAPE 1: V√©rifier la valeur par d√©faut actuelle
    -- =====================================================
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìã √âTAPE 1: V√©rification de la colonne cerises_balance';
    RAISE NOTICE '‚úÖ Colonne trouv√©e';
    
    -- =====================================================
    -- √âTAPE 2: Modifier la valeur par d√©faut √† 0
    -- =====================================================
    
    RAISE NOTICE '';
    RAISE NOTICE 'üîß √âTAPE 2: Correction de la valeur par d√©faut';
    
    -- Supprimer l'ancienne valeur par d√©faut si elle existe
    ALTER TABLE users 
    ALTER COLUMN cerises_balance DROP DEFAULT;
    
    RAISE NOTICE '‚úÖ Ancienne valeur par d√©faut supprim√©e';
    
    -- D√©finir la nouvelle valeur par d√©faut √† 0
    ALTER TABLE users 
    ALTER COLUMN cerises_balance SET DEFAULT 0;
    
    RAISE NOTICE '‚úÖ Nouvelle valeur par d√©faut: 0';
    
    -- S'assurer que la contrainte CHECK existe
    -- (la colonne ne peut jamais √™tre n√©gative)
    -- Note: Cette contrainte existe probablement d√©j√†, on la recr√©e pour √™tre s√ªr
    BEGIN
        ALTER TABLE users 
        DROP CONSTRAINT IF EXISTS users_cerises_balance_check;
        
        ALTER TABLE users 
        ADD CONSTRAINT users_cerises_balance_check 
        CHECK (cerises_balance >= 0);
        
        RAISE NOTICE '‚úÖ Contrainte CHECK (cerises >= 0) appliqu√©e';
    EXCEPTION
        WHEN duplicate_object THEN
            RAISE NOTICE '‚úì Contrainte CHECK existe d√©j√†';
    END;
    
    -- =====================================================
    -- √âTAPE 3: R√©initialiser les comptes √† 100 cerises (jamais jou√©)
    -- =====================================================
    
    RAISE NOTICE '';
    RAISE NOTICE '‚ôªÔ∏è  √âTAPE 3: R√©initialisation des comptes de test';
    
    -- R√©initialiser UNIQUEMENT les utilisateurs qui:
    -- 1. Ont exactement 100 cerises
    -- 2. N'ont aucune transaction de cerises (jamais jou√©)
    -- 3. Ont √©t√© cr√©√©s r√©cemment (derni√®res 48h)
    
    WITH users_to_update AS (
        SELECT u.id, u.pseudo, u.cerises_balance
        FROM users u
        WHERE u.cerises_balance = 100
        AND u.created_at > NOW() - INTERVAL '48 hours'
        -- V√©rifier qu'il n'y a pas de transactions (table cerises_transactions)
        AND NOT EXISTS (
            SELECT 1 FROM cerises_transactions ct
            WHERE ct.user_id = u.id
        )
    )
    UPDATE users
    SET cerises_balance = 0
    FROM users_to_update
    WHERE users.id = users_to_update.id;
    
    GET DIAGNOSTICS users_to_reset = ROW_COUNT;
    
    RAISE NOTICE '‚úÖ % compte(s) r√©initialis√©(s) √† 0 cerises', users_to_reset;
    
    -- =====================================================
    -- √âTAPE 4: Afficher un r√©sum√©
    -- =====================================================
    
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ CORRECTION TERMIN√âE!';
    RAISE NOTICE '==========================================================';
    
END $$;

-- =====================================================
-- V√âRIFICATION FINALE
-- =====================================================

-- V√©rifier la nouvelle valeur par d√©faut
SELECT 
    'üìä V√âRIFICATION FINALE' as status,
    column_name,
    COALESCE(column_default, 'NULL') as default_value,
    data_type,
    is_nullable
FROM information_schema.columns
WHERE table_name = 'users' 
AND column_name = 'cerises_balance';

-- Afficher la distribution des cerises
SELECT 
    'üçí DISTRIBUTION DES CERISES' as titre,
    cerises_balance as montant,
    COUNT(*) as nb_utilisateurs
FROM users
GROUP BY cerises_balance
ORDER BY cerises_balance;

-- Afficher les 10 derniers utilisateurs cr√©√©s
SELECT 
    'üë• DERNIERS UTILISATEURS CR√â√âS' as titre,
    pseudo,
    cerises_balance,
    created_at::date as creation
FROM users
ORDER BY created_at DESC
LIMIT 10;

SELECT '‚úÖ TOUS LES NOUVEAUX UTILISATEURS COMMENCERONT AVEC 0 CERISES!' as resultat;

